<div class='xml_fields'>

  <%# @todo improve on this implementation. 
    As it stands, it's a hostage to namespaces, 
    eg. dc:title 
    if namespaces aren't in the xml, we would have to specify dc:title
    but if the namespaces ARE present, we remove them so we would need title
  %>
  <%= fi.import :record_element, hint: 'Provide the xml element name to use to identify the record, or records, eg. ROW - each record in the attached XML is wrapped in a <ROW> tag.'>

  <%= fi.input :import_type, 
		collection: [
			['Multiple Metadata Files, One per Work', 'single'],
			['Single Metadata File, Multiple Works', 'multiple'] 
		], 
    selected: importer.parser_fields['import_type'],
    input_html: { class: 'form-control' }
    %>

  <% rights_statements = Hyrax.config.rights_statement_service_class.new %>
  <%= fi.input :rights_statement,
        collection: rights_statements.select_active_options,
        selected: importer.parser_fields['rights_statement'],
        include_blank: true,
        item_helper: rights_statements.method(:include_current_value),
        input_html: { class: 'form-control' } %>
  <%= fi.input :override_rights_statement, as: :boolean, hint: 'If checked, always use the selected rights statment. If unchecked, use rights or rights_statement from the record and only use the provided value if dc:rights is blank.', input_html: { checked: (importer.parser_fields['override_rights_statement'] == "1") } %>

  <h4>XML File or Folder to Import:</h4>
  <p>
		File upload and Cloud File upload MUST be a zip file, containing one or more folders.
		Each folder is treated as a work. 
	</p>

  <% selected = 'Specify a Path on the Server' if importer.parser_fields['import_file_path'].present? %>

  <%= fi.input :file_style, collection: ['Upload a File', 'Specify a Path on the Server', 'Add Cloud File'], checked: selected, as: :radio_buttons, label: false %>
  <div id='file_upload'>
    <%= fi.input 'file', as: :file, input_html: {accept: 'application/zip'} %><br />
  </div>
  <div id='file_path'>
    <%= fi.input :import_file_path, as: :string, input_html: { value: importer.parser_fields['import_file_path'] } %>
  </div>
  <div id='cloud'>
    <% if Hyrax.config.browse_everything? %>
      <%= render 'browse_everything', form: form %>
    <% end %>
  </div>
</div>